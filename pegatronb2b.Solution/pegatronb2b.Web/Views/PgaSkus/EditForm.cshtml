﻿



@model pegatronb2b.Web.Models.PgaSku


 @*@Html.HiddenFor(model => model.Id)*@




        <div class="form-group">
            @Html.LabelFor(model => model.Sku,   htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                @Html.EditorFor(model => model.Sku, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Sku,"" , new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Description,   htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description,"" , new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.StoreKey,   htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                @Html.EditorFor(model => model.StoreKey, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.StoreKey,"" , new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Keeper,   htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                @Html.EditorFor(model => model.Keeper, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Keeper,"" , new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Warehouse,   htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                @Html.EditorFor(model => model.Warehouse, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Warehouse,"" , new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.MOQ,   htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                @Html.EditorFor(model => model.MOQ, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MOQ,"" , new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.LotNo,   htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                @Html.EditorFor(model => model.LotNo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LotNo,"" , new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Mo,   htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                @Html.EditorFor(model => model.Mo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mo,"" , new { @class = "text-danger" })
            </div>
        </div>

				 
		<!-- output all Scaffold = false Hiden field -->
					@Html.HiddenFor(model => model.CreatedDate)
					@Html.HiddenFor(model => model.ModifiedDate)
					@Html.HiddenFor(model => model.CreatedBy)
					@Html.HiddenFor(model => model.ModifiedBy)
				<!--end output all Scaffold = false Hiden field -->
		   

 


  

 

